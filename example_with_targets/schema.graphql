schema {
  query: Input
  mutation: MutationRoot
}

"""
Only allow the field to be queried when targeting one of the specified targets.
"""
directive @restrictTarget(only: [String!]!) on FIELD_DEFINITION

"""
Requires that exactly one field must be supplied and that field must not be `null`.
"""
directive @oneOf on INPUT_OBJECT

"""
Represents an [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)-encoded date string.
For example, September 7, 2019 is represented as `"2019-07-16"`.
"""
scalar Date

"""
Represents an [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)-encoded date and time string.
For example, 3:50 pm on September 7, 2019 in the time zone of UTC (Coordinated Universal Time) is
represented as `"2019-09-07T15:50:00Z`".
"""
scalar DateTime

"""
A subset of the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format that
includes the date and time but not the timezone which is determined from context.

For example, "2018-01-01T00:00:00".
"""
scalar DateTimeWithoutTimezone

"""
A signed decimal number, which supports arbitrary precision and is serialized as a string.

Example values: `"29.99"`, `"29.999"`.
"""
scalar Decimal

"""
Represents a unique identifier, often used to refetch an object.
The ID type appears in a JSON response as a String, but it is not intended to be human-readable.

Example value: `"gid://shopify/Product/10079785100"`
"""
scalar ID

"""
A subset of the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format that
includes the time but not the date or timezone which is determined from context.
For example, "05:43:21".
"""
scalar TimeWithoutTimezone

"""
A void type that can be used to return a null value from a mutation.
"""
scalar Void

"""
The input object for the function.
"""
type Input {
  id: ID!
  num: Int
  name: String
  date: Date
  dateTime: DateTime
  dateTimeWithoutTimezone: DateTimeWithoutTimezone
  timeWithoutTimezone: TimeWithoutTimezone
  targetAResult: Int @restrictTarget(only: ["test.target-b"])
  country: CountryCode
}

"""
The root mutation for the API.
"""
type MutationRoot {
  """
  The function for API target A.
  """
  targetA(
    """
    The result of calling the function for API target A.
    """
    result: FunctionTargetAResult!
  ): Void!

  """
  The function for API target B.
  """
  targetB(
    """
    The result of calling the function for API target B.
    """
    result: FunctionTargetBResult!
  ): Void!
}

"""
The result of API target A.
"""
input FunctionTargetAResult {
  status: Int
}

"""
The result of API target B.
"""
input FunctionTargetBResult {
  name: String
  operations: [Operation!]!
}

input Operation @oneOf {
  doThis: This
  doThat: That
}

input This {
  thisField: String!
}

input That {
  thatField: Int!
}

"""
The country code for the function.
"""
enum CountryCode {
  AC
  CA
}
