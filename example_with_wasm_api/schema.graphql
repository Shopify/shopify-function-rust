type Query {
    cart: Cart!
}

type Cart {
    lines: [CartLine!]!
}

type CartLine {
    quantity: Int!

    """
    The merchandise that the buyer intends to purchase.
    """
    merchandise: Merchandise!
}

type Mutation {
    handleFunctionRunResult(functionRunResult: FunctionRunResult!): Void
}

scalar Void

"""
The run target result.
"""
input FunctionRunResult {
  """
  Errors.
  """
  errors: [FunctionError!]!
}

"""
A Function error for a path.
"""
input FunctionError {
  """
  Returns a message describing the error.
  """
  localizedMessage: String!

  """
  Specifies the path/target for use by the UI.
  """
  target: String!
}

enum LanguageCode {
    EN
    DE
    FR
    ES
    IT
    JA
}

enum CountryCode {
    US
    CA
    MX
}

enum CurrencyCode {
    USD
    CAD
    MXN
}

directive @oneOf on INPUT_OBJECT

"""
An operation to apply to the list of payment methods.
"""
input Operation @oneOf {
  """
  Request to hide a payment method.
  """
  hide: ID

  """
  Request to move a payment method to a new index.
  """
  move: ID

  """
  Request to rename a payment method.
  """
  rename: ID
}

"""
The merchandise to be purchased at checkout.
"""
union Merchandise = CustomProduct | ProductVariant

"""
A custom product.
"""
type CustomProduct {
  """
  Whether the merchandise is a gift card.
  """
  isGiftCard: Boolean!

  """
  Whether the merchandise requires shipping.
  """
  requiresShipping: Boolean!

  """
  The localized title of the product in the customer’s locale.
  """
  title: String!
}

"""
Represents a product variant.
"""
type ProductVariant {
  """
  A globally-unique identifier.
  """
  id: ID!

  """
  Whether the merchandise requires shipping.
  """
  requiresShipping: Boolean!

  """
  An identifier for the product variant in the shop. Required in order to connect to a fulfillment service.
  """
  sku: String

  """
  The localized title of the product variant in the customer’s locale.
  """
  title: String
}
